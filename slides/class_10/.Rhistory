N <- 1000000
poblacion_data <- tibble(value = runif(N, min = 5, max = 20))
# Cargamos librerías
library(ggplot2)
library(dplyr)
# Generamos la población (distribución uniforme entre 5 y 20)
set.seed(123)
N <- 1000000
poblacion_data <- tibble(value = runif(N, min = 5, max = 20))
# Graficamos la distribución de la población
ggplot(poblacion_data, aes(x = value)) +
geom_histogram(aes(y = ..density..), bins = 100, fill = "lightblue", color = "black") +
labs(title = "Distribución Uniforme en la Población", x = "Valor de x", y = "Densidad") +
theme_minimal()
# Cargamos librerías
library(tidyverse)
# Función de simulación del CLT
simulacion_clt <- function(n_muestra, n_experimentos, poblacion_data) {
resultados_medias <- numeric(n_experimentos)
# Realizamos la simulación de las muestras y sus medias
for (i in 1:n_experimentos) {
muestra <- sample_n(poblacion_data, size = n_muestra)  # Tomar muestra aleatoria
resultados_medias[i] <- mean(muestra$value)  # Calcular la media de la muestra
}
# Calcular la media y desviación estándar de las medias muestrales
media_muestral_observada <- mean(resultados_medias)
sd_muestral_observada <- sd(resultados_medias)
# Comparar con valores teóricos
media_teorica <- mean(poblacion_data$value)
sd_teorica <- sd(poblacion_data$value) / sqrt(n_muestra)
# Graficar distribución de medias muestrales
plot <- tibble(value = resultados_medias) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = ..density..), bins = 100, fill = "lightblue", color = "black") +
labs(x = "Media Muestral", y = "Densidad") +
xlim(5, 20) + ylim(0, 2) +
theme_bw()
# Devolver un resumen de los resultados
list(n = n_muestra, grafico = plot,
media_muestral_observada = media_muestral_observada,
media_teorica = media_teorica,
sd_muestral_observada = sd_muestral_observada,
sd_teorica = sd_teorica)
}
# Generamos la población (distribución uniforme entre 5 y 20)
set.seed(123)
N <- 1000000
poblacion_data <- tibble(value = runif(N, min = 5, max = 20))
poblacion_data
mean(poblacion_data$value)
n_muestras <- c(30, 100, 500)
map(n_muestras, ~ simulacion_clt(.x, n_experimentos, poblacion_data))
# Generamos la población (distribución uniforme entre 5 y 20)
set.seed(123)
N <- 1000000
poblacion_data <- tibble(value = runif(N, min = 5, max = 20))
mean(poblacion_data$value)
# Parámetros de simulación
n_experimentos <- 1000
# Simulación para n = 30, 100, 500
# Lista de tamaños de muestra
n_muestras <- c(30, 100, 500)
map(n_muestras, ~ simulacion_clt(.x, n_experimentos, poblacion_data))
sd(poblacion_data$value)
4.332172/sqrt(30)
